---
apiVersion: v1
kind: Service
metadata:
  name: users-rest-svc
  namespace: tyk
  labels:
    app: users-rest
spec:
  ports:
    - name: http
      port: 3101
      targetPort: 3101
  selector:
    app: users-rest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-rest
  namespace: tyk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-rest
  template:
    metadata:
      labels:
        app: users-rest
    spec:
      containers:
        - image: zalbiraw/go-api-test-service:v3.3
          imagePullPolicy: IfNotPresent
          name: users-rest
          command:
            - ./services/rest/users/server
          ports:
            - containerPort: 3101
          env:
            - name: PORT
              value: "3101"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://tyk-otel-collector-opentelemetry-collector.tyk.svc:4318"
---
apiVersion: v1
kind: Service
metadata:
  name: posts-rest-svc
  namespace: tyk
  labels:
    app: posts-rest
spec:
  ports:
    - name: http
      port: 3102
      targetPort: 3102
  selector:
    app: posts-rest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: posts-rest
  namespace: tyk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: posts-rest
  template:
    metadata:
      labels:
        app: posts-rest
    spec:
      containers:
        - image: zalbiraw/go-api-test-service:v3.3
          imagePullPolicy: IfNotPresent
          name: posts-rest
          command:
            - ./services/rest/posts/server
          ports:
            - containerPort: 3102
          env:
            - name: PORT
              value: "3102"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://tyk-otel-collector-opentelemetry-collector.tyk.svc:4318"
---
apiVersion: v1
kind: Service
metadata:
  name: comments-rest-svc
  namespace: tyk
  labels:
    app: comments-rest
spec:
  ports:
    - name: http
      port: 3103
      targetPort: 3103
  selector:
    app: comments-rest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: comments-rest
  namespace: tyk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: comments-rest
  template:
    metadata:
      labels:
        app: comments-rest
    spec:
      containers:
        - image: zalbiraw/go-api-test-service:v3.3
          imagePullPolicy: IfNotPresent
          name: comments-rest
          command:
            - ./services/rest/comments/server
          ports:
            - containerPort: 3103
          env:
            - name: PORT
              value: "3103"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://tyk-otel-collector-opentelemetry-collector.tyk.svc:4318"
---
apiVersion: tyk.tyk.io/v1alpha1
kind: ApiDefinition
metadata:
  name: social-media
  namespace: tyk
spec:
  name: social-media
  protocol: http
  active: true
  proxy:
    target_url: ""
    listen_path: /social-media
    strip_listen_path: true
  enable_detailed_recording: true
  detailed_tracing: true
  use_keyless: true
  graphql:
    enabled: true
    execution_mode: executionEngine
    schema: |
      type Query {
        user(id: Int!): User
      }

      type User {
        id: Int
        name: String
        email: String
        posts: [Post]
      }

      type Post {
        id: Int
        title: String
        body: String
        comments: [Comment]
      }

      type Comment {
        id: Int
        name: String
        email: String
        body: String
      }

    version: "2"
    playground:
      enabled: true
      path: /playground
    engine:
      field_configs:
        - type_name: Query
          field_name: user
          disable_default_mapping: true
          path: []
        - type_name: User
          field_name: posts
          disable_default_mapping: true
          path: []
        - type_name: Post
          field_name: comments
          disable_default_mapping: true
          path: []
      data_sources:
        - kind: REST
          name: User
          internal: false
          root_fields:
            - type: Query
              fields:
                - user
          config:
            url: http://users-rest-svc.tyk.svc:3101/users/{{.arguments.id}}
            method: GET
            body: ""
            headers: {}
        - kind: REST
          name: Posts
          internal: false
          root_fields:
            - type: User
              fields:
                - posts
          config:
            url: http://posts-rest-svc.tyk.svc:3102/users/{{.object.id}}/posts
            method: GET
            body: ""
            headers: {}
        - kind: REST
          name: Comments
          internal: false
          root_fields:
            - type: Post
              fields:
                - comments
          config:
            url: http://comments-rest-svc.tyk.svc:3103/posts/{{.object.id}}/comments
            method: GET
            body: ""
            headers: {}
