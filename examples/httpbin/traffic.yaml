apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-httpbin-traffic
  namespace: tyk
data:
  load.js: |
    import http from 'k6/http';
    import { sleep } from 'k6';
    import { randomIntBetween } from 'https://jslib.k6.io/k6-utils/1.2.0/index.js';

    export const options = {
        insecureSkipTLSVerify: true,
        discardResponseBodies: true,
        scenarios: {
            success: {
                executor: 'constant-vus',
                exec: 'success',
                vus: 5,
                duration: '2h',
            },
            failure: {
                executor: 'constant-vus',
                exec: 'error',
                vus: 5,
                duration: '2h',
            },
            differentPath: {
                executor: 'constant-vus',
                exec: 'differentPath',
                vus: 5,
                duration: '2h',
            },
            differentMethod: {
                executor: 'constant-vus',
                exec: 'differentMethod',
                vus: 5,
                duration: '2h',
            },
            breakingSlo: {
                executor: 'per-vu-iterations',
                exec: 'breakingSlo',
                vus: 5,
                iterations: 500,
                maxDuration: '2h',
            }
        }
    };
    
    function sendStatus(status) {
        http.get('http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/status/' + status);
        sleep(randomIntBetween(10, 30));
    }
    
    export function success() {
        sendStatus(200);
    }

    export function breakingSlo() {
        sendStatus(502);
    }

    export function error() {
        switch (randomIntBetween(1, 5)) {
            case 1:
                sendStatus(400); break;
            case 2:
                sendStatus(404); break;
            case 3:
                sendStatus(500); break;
            case 4:
                sendStatus(502); break;
            case 5:
                sendStatus(503); break;
        }
        sleep(randomIntBetween(10, 30));
    }

    export function differentPath() {
        switch (randomIntBetween(1, 5)) {
            case 1:
                http.get('http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/cache'); break;
            case 2:
                http.get('http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/ip'); break;
            case 3:
                http.get('http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/headers'); break;
            case 4:
                http.get('http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/user-agent'); break;
            default:
                http.get('http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/image'); break;
        }
        sleep(randomIntBetween(10, 30));
    }

    export function differentMethod() {
        var payload;
        var params;
        
        payload = JSON.stringify({
            content: 'Hello Tyk',
        });
        
        params = {
            headers: {
                'Content-Type': 'application/json',
            }
        };
        
        switch (randomIntBetween(1, 5)) {
            case 1:
                http.post("http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/post", payload, params);
                break;
            case 2:
                http.patch("http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/patch", payload, params);
                break;
            case 3:
                http.del("http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/delete", payload, params);
                break;
            case 4:
                http.put("http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/put", payload, params);
                break;
            case 5:
                http.post("http://gateway-svc-tyk-gateway.tyk.svc:8080/httpbin/response-headers", payload, params);
                break;
        }
        sleep(randomIntBetween(10, 30));
    }
---
apiVersion: k6.io/v1alpha1
kind: TestRun
metadata:
    name: k6-httpbin-traffic
    namespace: tyk
spec:
    parallelism: 1
    separate: false
    quiet: "false"
    script:
        configMap:
            name: k6-httpbin-traffic
            file: load.js
